#pragma once
#include "ial.h"
#include "scaner.h"

#define VELIKOST_TABULKY 18

static const char PrecedencniTabulka[VELIKOST_TABULKY][VELIKOST_TABULKY]={

/*           */{'Q','+','-','*','/','<','>','o','g','e','n','i','d','s','p','(',')','$'},
/*	   +     */{'+','<','<','<','<','>','>','>','>','>','>','<','<','<','<','<','>','>'},
/*	   -     */{'-','<','<','<','<','>','>','>','>','>','>','<','<','-','<','<','>','>'},
/*	   *     */{'*','>','>','>','>','>','>','>','>','>','>','<','<','-','<','<','>','>'},
/*	   /     */{'/','>','>','>','>','>','>','>','>','>','>','<','<','-','<','<','>','>'},
/*	   <     */{'<','<','<','<','<','-','-','-','-','-','-','<','<','-','<','<','>','>'},
/*	   >     */{'>','<','<','<','<','-','-','-','-','-','-','<','<','-','<','<','>','>'},
/*	   <=    */{'o','<','<','<','<','-','-','-','-','-','-','<','<','-','<','<','>','>'},
/*	   >=    */{'g','<','<','<','<','-','-','-','-','-','-','<','<','-','<','<','>','>'},
/*	   ==    */{'e','<','<','<','<','-','-','-','-','-','-','<','<','-','<','<','>','>'},
/*	   !=    */{'n','<','<','<','<','-','-','-','-','-','-','<','<','-','<','<','>','>'},
/*	   int   */{'i','>','>','>','>','>','>','-','-','-','-','-','-','-','-','-','>','>'},
/*    double */{'d','>','>','>','>','>','>','-','-','-','-','-','-','-','-','-','>','>'},
/*    string */{'s','>','>','>','>','>','>','-','-','-','-','-','-','-','-','-','>','>'},
/*	   i     */{'p','>','>','>','>','>','>','>','>','>','>','-','-','-','>','<','>','>'},
/*	   (     */{'(','<','<','<','<','<','<','<','<','<','<','<','<','<','<','<','=','>'},
/*	   )     */{')','>','>','>','>','>','>','>','>','>','>','-','<','-','>','>','>','>'},
/*	   $     */{'$','<','<','<','<','<','<','<','<','<','<','<','<','<','<','<','-','P'},
};
typedef struct expStack
{
   char data;
   state typ;
   struct expStack *next;
   union 
   {
      int intValue;
      double doubleValue;
      char *stringValue;
   }value;
} tExpStack;